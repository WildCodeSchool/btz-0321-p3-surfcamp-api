// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String        @id @default(uuid())
  firstname    String?
  lastname     String?
  email        String        @unique
  password     String
  picture      String?
  role         Role          @default(USER)
  birthDate    DateTime?
  isActive     Boolean       @default(false)
  phoneNumber  String?
  address      Address?      @relation(fields: [addressId], references: [id])
  addressId    String?
  property     Property[]
  comments     Comment[]
  createdAt    DateTime      @default(now())
}

model Address {
  id           String    @id @default(uuid())
  zipcode      String
  city         City       @relation(fields: [cityId], references: [id])
  cityId       String
  street       String
  streetNumber String
  lat          String?
  long         String?
  country      Country @relation(fields: [countryId], references: [id])
  countryId    String
  user         User?
  property     Property?
  createdAt    DateTime  @default(now())
}

model Property {
  id           String            @id @default(uuid())
  name         String              //name of the property
  description  String
  type         PropertyType        //type of the property, ex : Surfcamp/House/Flat/...
  priceByNight Decimal           @db.Money
  pictures     PropertyPicture[]
  address      Address           @relation(fields: [addressId], references: [id])
  addressId    String
  features     Feature[]
  comments     Comment[]
  phoneNumber  String
  createdAt    DateTime          @default(now())
  User         User             @relation(fields: [userId], references: [id])
  userId       String
}

model Country {
  id              String           @id @default(uuid())
  name            String            @unique
  title           String?
  description     String?
  textSeo         String?
  countryCode     String?
  city            City[]
  address         Address[]
  countryPictures CountryPicture[]
  createdAt       DateTime         @default(now())
}

model CountryPicture {
  id        String   @id @default(uuid())
  name      String
  url       String
  country   Country  @relation(fields: [countryId], references: [id])
  countryId String
  createdAt DateTime @default(now())
}

model City {
  id           String        @id @default(uuid())
  name         String
  title        String?
  description  String?
  textSeo      String?
  country      Country      @relation(fields: [countryId], references: [id])
  countryId    String
  address      Address[]
  cityPictures CityPicture[]
  createdAt    DateTime      @default(now())
}

model CityPicture {
  id        String   @id @default(uuid())
  name      String
  url       String
  city      City     @relation(fields: [cityId], references: [id])
  cityId    String
  createdAt DateTime @default(now())
}

model Feature {
  id         String   @id @default(uuid())
  label      Label
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  iconUrl    String
  createdAt  DateTime @default(now())
}

model PropertyPicture {
  id          String   @id @default(uuid())
  name        String
  description String
  url         String
  property    Property @relation(fields: [propertyId], references: [id])
  propertyId  String
  createdAt   DateTime @default(now())
}

model Comment {
  id            String      @id @default(uuid())
  comment       String      @db.Text
  rate          Int
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  property      Property?   @relation(fields: [propertyId], references: [id])
  propertyId    String?
  createdAt     DateTime    @default(now())
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
  RENTER
}

enum PropertyType {
  SURFCAMP
  HOUSE
  SURFSCHOOL
}

enum Label {
  WC
  SHOWER
  BATH
  KITCHEN
  LAUNDRY
  WIFI
  SURFBOARDS
  SURFSUIT
  RESTAURANT
  BICYCLE
  PETALLOWED
  NOPETALLOWED
  SMOKING
  NOSMOKING
  PARTY
  NOPARTY
  OTHER
}